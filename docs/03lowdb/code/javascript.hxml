# libs used in project
-lib js-kit
-lib hxnodejs

# integrate files to classpath
-cp src

# this class wil be used as entry point for your app.
-main Main

# JavaScript target
-js bin/example.js

# You can use -D source-map-content (requires Haxe 3.1+) to have the .hx
# files directly embedded into the map file, this way you only have to
# upload it, and it will be always in sync with the compiled .js even if
# you modify your .hx files.
# -D source-map-content

# Generate source map and add debug information
# -debug

# dead code elimination : remove unused code
# "-dce no" : do not remove unused code
# "-dce std" : remove unused code in the std lib (default)
# "-dce full" : remove all unused code
-dce full

# This is very cool, but not necessary for this project, you can create a package.json with the correct depencicies (https://github.com/clemos/haxe-js-kit# exporting-your-project-dependencies)
--macro npm.Package.export("package.json")

# Use terminal command to start Node.js!
-cmd cd bin
-cmd node example.js